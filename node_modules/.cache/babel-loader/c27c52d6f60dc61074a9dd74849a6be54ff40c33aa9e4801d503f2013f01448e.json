{"ast":null,"code":"var _jsxFileName = \"C:\\\\codingNinjas\\\\SKILL TEST\\\\Chat App\\\\ChatApp-React-Coding-Ninjas-master\\\\src\\\\components\\\\RightSidebar\\\\MessageInput.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MessageInput(props) {\n  _s();\n  const {\n    newMessageHandler\n  } = props;\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    // reset input value when contact component changes\n    setMessage(\"\");\n  }, [setMessage, props]);\n  let handleInputChange = e => {\n    e.preventDefault();\n    setMessage(e.target.value);\n  };\n  let handleSubmit = () => {\n    if (message) {\n      newMessageHandler(message);\n    } else {\n      alert(\"Type some message text before submitting\");\n    }\n    setMessage(\"\");\n    // scroll to the bottom\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 5,\n        lg: 5,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Send message\",\n          value: message,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSubmit,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MessageInput, \"ClLa+zvPL6vd0LAuHSvav3BaFBg=\");\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useEffect","useState","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageInput","props","_s","newMessageHandler","message","setMessage","handleInputChange","e","preventDefault","target","value","handleSubmit","alert","children","className","xs","lg","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/codingNinjas/SKILL TEST/Chat App/ChatApp-React-Coding-Ninjas-master/src/components/RightSidebar/MessageInput.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nfunction MessageInput(props) {\n  const { newMessageHandler } = props;\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    // reset input value when contact component changes\n    setMessage(\"\");\n  }, [setMessage, props]);\n  let handleInputChange = (e) => {\n    e.preventDefault();\n    setMessage(e.target.value);\n  };\n  let handleSubmit = () => {\n    if (message) {\n      newMessageHandler(message);\n    } else {\n      alert(\"Type some message text before submitting\");\n    }\n    setMessage(\"\");\n    // scroll to the bottom\n  };\n  return (\n    <>\n      <Row className=\"message-input\">\n        <Col xs={5} lg={5}>\n          <input\n            type=\"text\"\n            placeholder=\"Send message\"\n            value={message}\n            onChange={handleInputChange}\n          />\n        </Col>\n        <Col xs={3} lg={4}>\n          <button className=\"send-button\" onClick={handleSubmit}>\n            Send\n          </button>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default MessageInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC3C,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAkB,CAAC,GAAGF,KAAK;EACnC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1CD,SAAS,CAAC,MAAM;IACd;IACAa,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC,EAAE,CAACA,UAAU,EAAEJ,KAAK,CAAC,CAAC;EACvB,IAAIK,iBAAiB,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,UAAU,CAACE,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EACD,IAAIC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIP,OAAO,EAAE;MACXD,iBAAiB,CAACC,OAAO,CAAC;IAC5B,CAAC,MAAM;MACLQ,KAAK,CAAC,0CAA0C,CAAC;IACnD;IACAP,UAAU,CAAC,EAAE,CAAC;IACd;EACF,CAAC;;EACD,oBACER,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA,CAACH,GAAG;MAACoB,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BhB,OAAA,CAACF,GAAG;QAACoB,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAH,QAAA,eAChBhB,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,cAAc;UAC1BR,KAAK,EAAEN,OAAQ;UACfe,QAAQ,EAAEb;QAAkB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1B,OAAA,CAACF,GAAG;QAACoB,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAH,QAAA,eAChBhB,OAAA;UAAQiB,SAAS,EAAC,aAAa;UAACU,OAAO,EAAEb,YAAa;UAAAE,QAAA,EAAC;QAEvD;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACrB,EAAA,CAvCQF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAyCrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}